{"version":3,"sources":["components/NavBar.js","components/Score/Score.js","components/Buttons.js","components/GameBoard.js","App.js","index.js"],"names":["NavBar","props","AppBar","position","color","align","Toolbar","Typography","variant","Score","className","type","score","images","url","title","width","height","useStyles","makeStyles","theme","root","display","flexWrap","minWidth","image","breakpoints","down","zIndex","opacity","border","focusVisible","imageButton","left","right","top","bottom","alignItems","justifyContent","palette","common","white","imageSrc","backgroundSize","backgroundPosition","imageBackdrop","backgroundColor","black","transition","transitions","create","imageTitle","padding","spacing","imageMarked","ButtonBases","classes","map","ButtonBase","focusRipple","key","focusVisibleClassName","style","backgroundImage","component","flexGrow","paper","textAlign","text","secondary","AutoGrid","Grid","container","item","xs","Paper","App","state","characters","pickedCharacters","topScore","alertMessage","handlePicked","event","name","target","attributes","getNamedItem","value","shuffleCharacters","checkGuess","updateTopScore","shuffleArray","a","j","x","i","index","length","Math","floor","random","cb","newState","includes","toUpperCase","setState","push","alertWinner","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ffb42f7.chunk.js","sourcesContent":["import React from \"react\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst NavBar = props => {\n    return(\n        <div>\n            <AppBar position = \"static\" color = \"secondary\" {...props}>\n            <h1 align = \"left\">Mario Clicky Game</h1>\n                <Toolbar>\n                    <Typography variant = \"headline\">\n                        <h2 align = \"center\">Try to click all of the characters without clicking the same one twice</h2>\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n\nexport default NavBar;\n","import React from 'react';\nimport './Score.css';\n\nconst Score = props => (\n    <div className = 'score'>\n        {props.type}: {props.score}\n    </div>\n)\n\nexport default Score;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\n\nconst images = [\n  {\n    url: './images/mario.jpg',\n    title: 'Mario',\n    width: '30%',\n    height: '20%',\n  },\n  {\n    url: './images/peach.jpg',\n    title: 'Peach',\n    width: '30%',\n    height: '20%',\n  },\n  {\n    url: './images/birdo.jpg',\n    title: 'Birdo',\n    width: '30%',\n    height: '20%',\n  },\n  {\n    url: './images/boo.jpg',\n    title: 'Boo',\n    width: '30%',\n    height: '20%',\n  },\n  {\n    url: './images/bowser.jpg',\n    title: 'Bowser',\n    width: '30%',\n    height: '20%',\n  },\n  {\n    url: './images/daisy.jpg',\n    title: 'Daisy',\n    width: '30%',\n    height: '20%',\n  },\n  {\n    url: './images/donkeykong.jpg',\n    title: 'Donkey Kong',\n    width: '30%',\n    height: '30%',\n  },\n  {\n    url: './images/luigi.jpg',\n    title: 'Luigi',\n    width: '30%',\n    height: '30%',\n  },\n  {\n    url: './images/toad.jpg',\n    title: 'Toad',\n    width: '30%',\n    height: '30%',\n  },\n  {\n    url: './images/waluigi.jpeg',\n    title: 'Waluigi',\n    width: '30%',\n    height: '30%',\n  },\n  {\n    url: './images/wario.png',\n    title: 'Wario',\n    width: '30%',\n    height: '30%',\n  },\n  {\n    url: './images/yoshi.png',\n    title: 'Yoshi',\n    width: '30%',\n    height: '30%',\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    minWidth: 300,\n    width: '100%',\n  },\n  image: {\n    position: 'relative',\n    height: 200,\n    [theme.breakpoints.down('sm')]: {\n      width: '100% !important', // Overrides inline-style\n      height: 100,\n    },\n    '&:hover, &$focusVisible': {\n      zIndex: 1,\n      '& $imageBackdrop': {\n        opacity: 0.15,\n      },\n      '& $imageMarked': {\n        opacity: 0,\n      },\n      '& $imageTitle': {\n        border: '4px solid currentColor',\n      },\n    },\n  },\n  focusVisible: {},\n  imageButton: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: theme.palette.common.white,\n  },\n  imageSrc: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center 40%',\n  },\n  imageBackdrop: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundColor: theme.palette.common.black,\n    opacity: 0.4,\n    transition: theme.transitions.create('opacity'),\n  },\n  imageTitle: {\n    position: 'relative',\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\n  },\n  imageMarked: {\n    height: 3,\n    width: 18,\n    backgroundColor: theme.palette.common.white,\n    position: 'absolute',\n    bottom: -2,\n    left: 'calc(50% - 9px)',\n    transition: theme.transitions.create('opacity'),\n  },\n}));\n\nexport default function ButtonBases() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      {images.map((image) => (\n        <ButtonBase\n          focusRipple\n          key={image.title}\n          className={classes.image}\n          focusVisibleClassName={classes.focusVisible}\n          style={{\n            width: image.width,\n          }}\n        >\n          <span\n            className={classes.imageSrc}\n            style={{\n              backgroundImage: `url(${image.url})`,\n            }}\n          />\n          <span className={classes.imageBackdrop} />\n          <span className={classes.imageButton}>\n            <Typography\n              component=\"span\"\n              variant=\"subtitle1\"\n              color=\"inherit\"\n              className={classes.imageTitle}\n            >\n              {image.title}\n              <span className={classes.imageMarked} />\n            </Typography>\n          </span>\n        </ButtonBase>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Buttons from './Buttons';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles ((theme) => ({\n    root: {\n        flexGrow: 1, \n    },\n    paper: {\n        padding: theme.spacing(8),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default function AutoGrid() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs>\n                    <Paper className={classes.paper}>\n                        <Buttons />\n                    </Paper>\n                </Grid>\n            </Grid>\n        </div>\n    )\n    }\n                /* <Grid item xs>\n                    <Paper className={classes.paper}>\n                    <Buttons />\n                    </Paper>\n                </Grid>\n                <Grid item xs>\n                    <Paper className={classes.paper}>\n                    <Buttons />\n                    </Paper>\n                </Grid>\n            </Grid>\n            <Grid container spacing={3}>\n                <Grid item xs>\n                    <Paper className={classes.paper}>\n                    <Buttons />\n                    </Paper>\n                </Grid>\n                <Grid item xs>\n                    <Paper className={classes.paper}>\n                    <Buttons />\n                    </Paper>\n                </Grid>\n                <Grid>\n                    <Paper className={classes.paper}>\n                    <Buttons />\n                    </Paper>\n                </Grid>\n            </Grid>\n            <Grid container spacing={3}>\n                <Grid item sm>\n                    <Paper className={classes.paper}>\n                    <Buttons />\n                    </Paper>\n                </Grid>\n                <Grid item sm>\n                    <Paper className={classes.paper}>\n                    <Buttons />\n                    </Paper>\n                </Grid>\n                <Grid>\n                    <Paper className={classes.paper}>\n                    <Buttons />\n                    </Paper>\n                </Grid>\n            </Grid>\n        </div>\n    )\n} */","import React, {Component} from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport Score from \"./components/Score\";\nimport characters from \"./characters.json\";\n// import CharacterCard from \"./components/CharacterCard\";\n// import Alert from \"./components/Alert\";\nimport GameBoard from \"./components/GameBoard\";\nimport \"./App.css\";\n\nclass App extends Component{\n\n  state = {\n    characters: characters, \n    pickedCharacters: [],\n    topScore: 0,\n    alertMessage: \"\"\n  }\n\n  handlePicked = event => {\n    const name = event.target.attributes.getNamedItem(\"name\").value;\n    this.shuffleCharacters ()\n    this.checkGuess (name, this.updateTopScore)\n  }\n\n  shuffleArray = (a) => {\n    var j, x, i;\n    for (let index = a.length - 1; index > 0; index--) {\n      j = Math.floor(Math.random() * (index + 1));\n      x = a[i];\n      a[i] = a[j];\n      a[j] = x;\n    }\n    return a;\n  }\n\n  checkGuess = (name, cb) => {\n    const newState = { ...this.state };\n    if (newState.pickedCharacters.includes(name)) {\n      newState.alertMessage = `You already picked  \"${name.toUpperCase()}\"!`\n      newState.pickedCharacters = []\n      this.setState(newState)\n    } else {\n      newState.pickedCharacters.push(name)\n      newState.alertMessage = `Keep Choosing`\n      this.setState(newState)\n    }\n    cb(newState, this.alertWinner)\n  }\n\n  alertWinner = (newState) => {\n    if (newState.pickedCharacters.length === 12) {\n      newState.alertMessage = \"Winner!\"; \n      newState.pickedCharacters = [];\n      this.setState(newState)\n    }\n  }\n\nshuffleCharacters = () => {this.setState(this.shuffleArray(this.state.characters))}\n\nrender () {\n  return (\n    <div>\n      <NavBar>\n        <Score type = 'Score' score = {this.state.pickedCharacters.length} />\n        <Score type = 'Top Score' score = {this.state.topScore} />\n      </NavBar>\n      <GameBoard>\n      </GameBoard>\n    </div>\n            \n  )\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}